/* ========== Animation Variables ========== */
/* Animation timing and easing functions are defined in variables.css */
/* --duration-fast: 200ms */
/* --duration-normal: 300ms */
/* --duration-slow: 500ms */
/* --duration-slower: 700ms */
/* --ease-in: cubic-bezier(0.4, 0, 1, 1) */
/* --ease-out: cubic-bezier(0, 0, 0.2, 1) */
/* --ease-in-out: cubic-bezier(0.4, 0, 0.2, 1) */

/* ========== Performance Optimizations ========== */

/* GPU acceleration for animated elements */
.animate-on-scroll,
.education-card,
.skill-category,
.project-card,
.about-content {
  will-change: transform, opacity;
  transform: translateZ(0);
  backface-visibility: hidden;
}

/* Remove will-change after animation completes to free resources */
.animate-on-scroll.animate,
.education-card.animate,
.skill-category.animate,
.project-card.animate,
.about-content.animate {
  will-change: auto;
}

/* ========== Core Animation Definitions ========== */

/* Fade In Animation */
@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

/* Slide In Up Animation */
@keyframes slideInUp {
  from {
    opacity: 0;
    transform: translateY(30px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* Slide In Down Animation */
@keyframes slideInDown {
  from {
    opacity: 0;
    transform: translateY(-30px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* Scale In Animation */
@keyframes scaleIn {
  from {
    opacity: 0;
    transform: scale(0.9);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}

/* Bounce In Animation */
@keyframes bounceIn {
  0% {
    opacity: 0;
    transform: scale(0.3);
  }
  50% {
    opacity: 1;
    transform: scale(1.05);
  }
  70% {
    transform: scale(0.9);
  }
  100% {
    transform: scale(1);
  }
}

/* Slide In From Left Animation */
@keyframes slideInLeft {
  from {
    opacity: 0;
    transform: translateX(-50px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

/* Slide In From Right Animation */
@keyframes slideInRight {
  from {
    opacity: 0;
    transform: translateX(50px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

/* ========== Hero Section Load Animations ========== */

/* Initial state for animated elements */
.hero-avatar,
.hero-name,
.hero-title,
.hero-intro,
.hero-contacts {
  opacity: 0;
}

/* Avatar animation - scale in with fade */
.hero-avatar.animate {
  animation: scaleIn 0.6s var(--ease-out) forwards;
}

/* Name animation - slide in from bottom */
.hero-name.animate {
  animation: slideInUp 0.5s var(--ease-out) 0.2s forwards;
}

/* Title animation - slide in from bottom */
.hero-title.animate {
  animation: slideInUp 0.5s var(--ease-out) 0.4s forwards;
}

/* Intro animation - fade in */
.hero-intro.animate {
  animation: fadeIn 0.5s var(--ease-out) 0.6s forwards;
}

/* Contacts animation - bounce in */
.hero-contacts.animate {
  animation: bounceIn 0.6s var(--ease-out) 0.8s forwards;
}

/* Individual contact link stagger animation */
.hero-contacts.animate .contact-link {
  opacity: 0;
  animation: bounceIn 0.4s var(--ease-out) forwards;
}

.hero-contacts.animate .contact-link:nth-child(1) {
  animation-delay: 1s;
}

.hero-contacts.animate .contact-link:nth-child(2) {
  animation-delay: 1.1s;
}

.hero-contacts.animate .contact-link:nth-child(3) {
  animation-delay: 1.2s;
}

/* ========== Scroll Trigger Animations ========== */

/* 
 * Base class for scroll-triggered animations
 * Add .animate-on-scroll to any element that should animate when scrolling into view
 * The .animate class will be added by JavaScript when element enters viewport
 */
.animate-on-scroll {
  opacity: 0;
  transform: translateY(30px);
  transition: opacity var(--duration-slow) var(--ease-out),
              transform var(--duration-slow) var(--ease-out);
}

.animate-on-scroll.animate {
  opacity: 1;
  transform: translateY(0);
}

/* ========== Education Section Animations ========== */

/* Education cards slide in alternating from left and right */
.education-card {
  opacity: 0;
}

.education-card.animate:nth-child(odd) {
  animation: slideInLeft 0.6s var(--ease-out) forwards;
}

.education-card.animate:nth-child(even) {
  animation: slideInRight 0.6s var(--ease-out) forwards;
}

/* Stagger animation delays for multiple cards */
.education-card.animate:nth-child(1) {
  animation-delay: 0.1s;
}

.education-card.animate:nth-child(2) {
  animation-delay: 0.2s;
}

.education-card.animate:nth-child(3) {
  animation-delay: 0.3s;
}

.education-card.animate:nth-child(4) {
  animation-delay: 0.4s;
}

.education-card.animate:nth-child(5) {
  animation-delay: 0.5s;
}

/* ========== Performance Optimization ========== */

/*
 * GPU Acceleration for Animated Elements
 * - will-change: Hints browser to optimize for upcoming changes
 * - transform: translateZ(0): Forces GPU acceleration
 * - backface-visibility: hidden: Prevents flickering during animations
 * 
 * Note: Only use transform and opacity for animations to ensure smooth 60fps performance
 * These properties can be animated without triggering layout or paint operations
 */

/* Hero section elements */
.hero-avatar,
.hero-name,
.hero-title,
.hero-intro,
.hero-contacts {
  will-change: transform, opacity;
  transform: translateZ(0);
  backface-visibility: hidden;
}

/* General scroll-triggered elements */
.animate-on-scroll {
  will-change: transform, opacity;
  transform: translateZ(0);
  backface-visibility: hidden;
}

/* Education section elements */
.education-card {
  will-change: transform, opacity;
  transform: translateZ(0);
  backface-visibility: hidden;
}

/* ========== Skills Section Animations ========== */

/* Pop In Animation for skill tags */
@keyframes popIn {
  0% {
    opacity: 0;
    transform: scale(0.5);
  }
  50% {
    transform: scale(1.1);
  }
  100% {
    opacity: 1;
    transform: scale(1);
  }
}

/* Skill category fade in */
.skill-category {
  opacity: 0;
}

.skill-category.animate {
  animation: fadeIn 0.5s var(--ease-out) forwards;
}

/* Stagger animation for skill categories */
.skill-category.animate:nth-child(1) {
  animation-delay: 0.1s;
}

.skill-category.animate:nth-child(2) {
  animation-delay: 0.2s;
}

.skill-category.animate:nth-child(3) {
  animation-delay: 0.3s;
}

.skill-category.animate:nth-child(4) {
  animation-delay: 0.4s;
}

/* Skill tags pop in animation with stagger */
.skill-category.animate .skill-tag {
  opacity: 0;
  animation: popIn 0.4s var(--ease-out) forwards;
}

/* Stagger delays for skill tags within each category */
.skill-category.animate .skill-tag:nth-child(1) {
  animation-delay: 0.3s;
}

.skill-category.animate .skill-tag:nth-child(2) {
  animation-delay: 0.35s;
}

.skill-category.animate .skill-tag:nth-child(3) {
  animation-delay: 0.4s;
}

.skill-category.animate .skill-tag:nth-child(4) {
  animation-delay: 0.45s;
}

.skill-category.animate .skill-tag:nth-child(5) {
  animation-delay: 0.5s;
}

.skill-category.animate .skill-tag:nth-child(6) {
  animation-delay: 0.55s;
}

.skill-category.animate .skill-tag:nth-child(7) {
  animation-delay: 0.6s;
}

.skill-category.animate .skill-tag:nth-child(8) {
  animation-delay: 0.65s;
}

/* Additional stagger for categories 2-4 */
.skill-category.animate:nth-child(2) .skill-tag:nth-child(1) {
  animation-delay: 0.4s;
}

.skill-category.animate:nth-child(2) .skill-tag:nth-child(2) {
  animation-delay: 0.45s;
}

.skill-category.animate:nth-child(2) .skill-tag:nth-child(3) {
  animation-delay: 0.5s;
}

.skill-category.animate:nth-child(2) .skill-tag:nth-child(4) {
  animation-delay: 0.55s;
}

.skill-category.animate:nth-child(2) .skill-tag:nth-child(5) {
  animation-delay: 0.6s;
}

.skill-category.animate:nth-child(2) .skill-tag:nth-child(6) {
  animation-delay: 0.65s;
}

.skill-category.animate:nth-child(3) .skill-tag:nth-child(1) {
  animation-delay: 0.5s;
}

.skill-category.animate:nth-child(3) .skill-tag:nth-child(2) {
  animation-delay: 0.55s;
}

.skill-category.animate:nth-child(3) .skill-tag:nth-child(3) {
  animation-delay: 0.6s;
}

.skill-category.animate:nth-child(3) .skill-tag:nth-child(4) {
  animation-delay: 0.65s;
}

.skill-category.animate:nth-child(3) .skill-tag:nth-child(5) {
  animation-delay: 0.7s;
}

.skill-category.animate:nth-child(3) .skill-tag:nth-child(6) {
  animation-delay: 0.75s;
}

.skill-category.animate:nth-child(4) .skill-tag:nth-child(1) {
  animation-delay: 0.6s;
}

.skill-category.animate:nth-child(4) .skill-tag:nth-child(2) {
  animation-delay: 0.65s;
}

.skill-category.animate:nth-child(4) .skill-tag:nth-child(3) {
  animation-delay: 0.7s;
}

.skill-category.animate:nth-child(4) .skill-tag:nth-child(4) {
  animation-delay: 0.75s;
}

.skill-category.animate:nth-child(4) .skill-tag:nth-child(5) {
  animation-delay: 0.8s;
}

/* Skills section elements */
.skill-category,
.skill-tag {
  will-change: transform, opacity;
  transform: translateZ(0);
  backface-visibility: hidden;
}

/* ========== Projects Section Animations ========== */

/* Project cards fade in with stagger */
.project-card {
  opacity: 0;
  transform: translateY(40px);
}

.project-card.animate {
  animation: fadeInUp 0.6s var(--ease-out) forwards;
}

/* Fade In Up Animation for project cards */
@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(40px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* Stagger animation delays for project cards */
.project-card.animate:nth-child(1) {
  animation-delay: 0.1s;
}

.project-card.animate:nth-child(2) {
  animation-delay: 0.25s;
}

.project-card.animate:nth-child(3) {
  animation-delay: 0.4s;
}

.project-card.animate:nth-child(4) {
  animation-delay: 0.55s;
}

.project-card.animate:nth-child(5) {
  animation-delay: 0.7s;
}

.project-card.animate:nth-child(6) {
  animation-delay: 0.85s;
}

/* Projects section elements */
.project-card {
  will-change: transform, opacity;
  transform: translateZ(0);
  backface-visibility: hidden;
}

/* ========== About Section Animations ========== */

/* About content fade in */
.about-content {
  opacity: 0;
  transform: translateY(40px);
}

.about-content.animate {
  animation: fadeInUp 0.8s var(--ease-out) forwards;
}

/* Quote icon animation */
.about-quote-icon {
  opacity: 0;
  transform: scale(0.5) rotate(-180deg);
}

.about-content.animate .about-quote-icon {
  animation: quoteIconAppear 0.8s var(--ease-out) 0.3s forwards;
}

@keyframes quoteIconAppear {
  0% {
    opacity: 0;
    transform: scale(0.5) rotate(-180deg);
  }
  60% {
    transform: scale(1.1) rotate(10deg);
  }
  100% {
    opacity: 1;
    transform: scale(1) rotate(0deg);
  }
}

/* Paragraph stagger animation */
.about-paragraph {
  opacity: 0;
  transform: translateX(-30px);
}

.about-content.animate .about-paragraph {
  animation: slideInFade 0.6s var(--ease-out) forwards;
}

@keyframes slideInFade {
  from {
    opacity: 0;
    transform: translateX(-30px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

/* Stagger delays for paragraphs */
.about-content.animate .about-paragraph:nth-child(1) {
  animation-delay: 0.5s;
}

.about-content.animate .about-paragraph:nth-child(2) {
  animation-delay: 0.7s;
}

.about-content.animate .about-paragraph:nth-child(3) {
  animation-delay: 0.9s;
}

.about-content.animate .about-paragraph:nth-child(4) {
  animation-delay: 1.1s;
}

.about-content.animate .about-paragraph:nth-child(5) {
  animation-delay: 1.3s;
}

/* About section elements */
.about-content,
.about-quote-icon,
.about-paragraph {
  will-change: transform, opacity;
  transform: translateZ(0);
  backface-visibility: hidden;
}

/*
 * Performance Best Practices Applied:
 * 
 * 1. ✓ All animations use only transform and opacity properties
 *    - These properties are GPU-accelerated and don't trigger layout/paint
 *    - Ensures smooth 60fps animations
 * 
 * 2. ✓ will-change property hints browser optimization
 *    - Tells browser which properties will animate
 *    - Allows browser to prepare optimization in advance
 * 
 * 3. ✓ transform: translateZ(0) forces GPU layer creation
 *    - Creates a new composite layer on GPU
 *    - Prevents main thread blocking during animations
 * 
 * 4. ✓ backface-visibility: hidden prevents flickering
 *    - Hides back face of elements during 3D transforms
 *    - Reduces visual artifacts during animations
 * 
 * 5. ✓ Animation durations between 300-600ms (as per requirements)
 *    - Fast enough to feel responsive
 *    - Slow enough to be perceived and appreciated
 * 
 * 6. ✓ Intersection Observer for scroll animations
 *    - More performant than scroll event listeners
 *    - Automatically handles viewport detection
 */
